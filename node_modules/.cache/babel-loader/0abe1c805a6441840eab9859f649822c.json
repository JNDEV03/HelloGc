{"ast":null,"code":"import randomWords from \"random-words\";\nimport { COMMON_WORDS, COMMON_CHINESE_WORDS, COMMON_CHINESE_IDIOMS_WORDS } from \"../constants/WordsMostCommon\";\nimport { DEFAULT_DIFFICULTY, ENGLISH_MODE, CHINESE_MODE, DEFAULT_WORDS_COUNT } from \"../constants/Constants\";\nimport { randomIntFromRange } from \"./randomUtils\";\nimport { VOCAB_DICTIONARIES, DICTIONARY_SOURCE_CATALOG } from \"../constants/DictionaryConstants\";\n\nconst wordsGenerator = (wordsCount, difficulty, languageMode) => {\n  if (languageMode === ENGLISH_MODE) {\n    if (difficulty === DEFAULT_DIFFICULTY) {\n      const EnglishWordList = [];\n\n      for (let i = 0; i < DEFAULT_WORDS_COUNT; i++) {\n        const rand = randomIntFromRange(0, 550);\n        EnglishWordList.push(COMMON_WORDS[rand]);\n      }\n\n      return EnglishWordList;\n    }\n\n    const randomWordsGenerated = randomWords({\n      exactly: wordsCount,\n      maxLength: 7\n    });\n    const words = [];\n\n    for (let i = 0; i < wordsCount; i++) {\n      words.push({\n        key: randomWordsGenerated[i],\n        val: randomWordsGenerated[i]\n      });\n    }\n\n    return words;\n  }\n\n  return [\"something\", \"went\", \"wrong\"];\n};\n\nconst chineseWordsGenerator = (difficulty, languageMode) => {\n  if (languageMode === CHINESE_MODE) {\n    if (difficulty === DEFAULT_DIFFICULTY) {\n      const ChineseWordList = [];\n\n      for (let i = 0; i < DEFAULT_WORDS_COUNT; i++) {\n        const rand = randomIntFromRange(0, 5000);\n\n        if (COMMON_CHINESE_WORDS[rand] && COMMON_CHINESE_WORDS[rand].val) {\n          ChineseWordList.push(COMMON_CHINESE_WORDS[rand]);\n        }\n      }\n\n      return ChineseWordList;\n    }\n\n    const ChineseIdiomsList = [];\n\n    for (let i = 0; i < DEFAULT_WORDS_COUNT; i++) {\n      const rand = randomIntFromRange(0, 5000);\n\n      if (COMMON_CHINESE_IDIOMS_WORDS[rand] && COMMON_CHINESE_IDIOMS_WORDS[rand].val) {\n        ChineseIdiomsList.push(COMMON_CHINESE_IDIOMS_WORDS[rand]);\n      }\n    }\n\n    return ChineseIdiomsList;\n  }\n};\n\nconst wordsCardVocabGenerator = (vocabSource, chapter) => {\n  const wordsList = [];\n  const chapterCatalog = DICTIONARY_SOURCE_CATALOG[vocabSource];\n  const chapterStartIndex = chapterCatalog[chapter][0];\n  const chapterEndIndex = chapterCatalog[chapter][1];\n\n  for (let i = chapterStartIndex; i < chapterEndIndex + 1; i++) {\n    wordsList.push(VOCAB_DICTIONARIES[vocabSource][i]);\n  }\n\n  return wordsList;\n};\n\nexport { wordsGenerator, chineseWordsGenerator, wordsCardVocabGenerator };","map":{"version":3,"sources":["C:/Users/GIGA/Desktop/eletype-frontend-main/src/scripts/wordsGenerator.js"],"names":["randomWords","COMMON_WORDS","COMMON_CHINESE_WORDS","COMMON_CHINESE_IDIOMS_WORDS","DEFAULT_DIFFICULTY","ENGLISH_MODE","CHINESE_MODE","DEFAULT_WORDS_COUNT","randomIntFromRange","VOCAB_DICTIONARIES","DICTIONARY_SOURCE_CATALOG","wordsGenerator","wordsCount","difficulty","languageMode","EnglishWordList","i","rand","push","randomWordsGenerated","exactly","maxLength","words","key","val","chineseWordsGenerator","ChineseWordList","ChineseIdiomsList","wordsCardVocabGenerator","vocabSource","chapter","wordsList","chapterCatalog","chapterStartIndex","chapterEndIndex"],"mappings":"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","sourcesContent":["import randomWords from \"random-words\";\nimport {\n  COMMON_WORDS,\n  COMMON_CHINESE_WORDS,\n  COMMON_CHINESE_IDIOMS_WORDS,\n} from \"../constants/WordsMostCommon\";\nimport {\n  DEFAULT_DIFFICULTY,\n  ENGLISH_MODE,\n  CHINESE_MODE,\n  DEFAULT_WORDS_COUNT,\n} from \"../constants/Constants\";\nimport { randomIntFromRange } from \"./randomUtils\";\nimport { VOCAB_DICTIONARIES, DICTIONARY_SOURCE_CATALOG } from \"../constants/DictionaryConstants\";\n\nconst wordsGenerator = (wordsCount, difficulty, languageMode) => {\n  if (languageMode === ENGLISH_MODE) {\n    if (difficulty === DEFAULT_DIFFICULTY) {\n        const EnglishWordList = [];\n        for (let i = 0; i < DEFAULT_WORDS_COUNT; i++) {\n          const rand = randomIntFromRange(0, 550);\n          EnglishWordList.push(COMMON_WORDS[rand]);\n        }\n        return EnglishWordList;\n    }\n    const randomWordsGenerated = randomWords({ exactly: wordsCount, maxLength: 7 });\n    const words = [];\n    for (let i = 0; i < wordsCount; i++) {\n        words.push({key: randomWordsGenerated[i], val: randomWordsGenerated[i]});\n      }\n    return words;\n  }\n  return [\"something\", \"went\", \"wrong\"];\n};\n\nconst chineseWordsGenerator = ( difficulty, languageMode) => {\n  if (languageMode === CHINESE_MODE) {\n    if (difficulty === DEFAULT_DIFFICULTY){\n      const ChineseWordList = [];\n      for (let i = 0; i < DEFAULT_WORDS_COUNT; i++) {\n        const rand = randomIntFromRange(0, 5000);\n        if (COMMON_CHINESE_WORDS[rand] && COMMON_CHINESE_WORDS[rand].val){\n          ChineseWordList.push(COMMON_CHINESE_WORDS[rand]);\n        }\n      }\n  \n      return ChineseWordList;\n    }\n\n    const ChineseIdiomsList = [];\n    for (let i = 0; i < DEFAULT_WORDS_COUNT; i++) {\n      const rand = randomIntFromRange(0, 5000);\n      if (COMMON_CHINESE_IDIOMS_WORDS[rand] && COMMON_CHINESE_IDIOMS_WORDS[rand].val){\n        ChineseIdiomsList.push(COMMON_CHINESE_IDIOMS_WORDS[rand]);\n      }\n    }\n\n    return ChineseIdiomsList;\n\n  }\n};\n\nconst wordsCardVocabGenerator = (vocabSource, chapter) => {\n  const wordsList = [];\n  const chapterCatalog = DICTIONARY_SOURCE_CATALOG[vocabSource];\n  const chapterStartIndex = chapterCatalog[chapter][0];\n  const chapterEndIndex = chapterCatalog[chapter][1];\n  for (let i = chapterStartIndex; i < chapterEndIndex + 1; i++) {\n    wordsList.push(VOCAB_DICTIONARIES[vocabSource][i]);\n  }\n  return wordsList;\n}\n\nexport { wordsGenerator, chineseWordsGenerator, wordsCardVocabGenerator};\n"]},"metadata":{},"sourceType":"module"}