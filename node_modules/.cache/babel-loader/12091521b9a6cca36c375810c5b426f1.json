{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGA\\\\Desktop\\\\eletype-frontend-main\\\\src\\\\components\\\\features\\\\WordsCard\\\\WordsCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { DICTIONARY_SOURCE_CATALOG } from \"../../../constants/DictionaryConstants\";\nimport { RECITE_MODE_TITLE, RESTART_BUTTON_TOOLTIP_TITLE_WORDSCARD, SELECT_ONE_OR_MORE_CHAPTERS } from \"../../../constants/Constants\";\nimport useLocalPersistState from \"../../../hooks/useLocalPersistState\";\nimport { wordsCardVocabGenerator } from \"../../../scripts/wordsGenerator\";\nimport { Grid, Box, Tooltip } from \"@mui/material\";\nimport IconButton from \"../../utils/IconButton\";\nimport { Dialog } from \"@mui/material\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WordsCard = () => {\n  _s();\n\n  // set up game loop status state\n  const [status, setStatus] = useState(\"waiting\");\n  const [showCatalog, setShowCatalog] = useState(false);\n  const [hideWord, setHideWord] = useState(false); // tab-enter restart dialog\n\n  const [openRestart, setOpenRestart] = useState(false);\n\n  const EnterkeyPressReset = e => {\n    // press enter/or tab to reset;\n    if (e.keyCode === 13 || e.keyCode === 9) {\n      e.preventDefault();\n      setOpenRestart(false);\n      setIndex(0);\n      setCurrInput(\"\");\n      hiddenInputRef.current.value = \"\";\n    } else {\n      e.preventDefault();\n      setOpenRestart(false);\n    }\n  };\n\n  const handleTabKeyOpen = () => {\n    setOpenRestart(true);\n  }; // localStorage persist theme setting\n\n\n  const [alphabetSet, setAlphabetSet] = useState(() => {\n    const stickyAlphabetSet = window.localStorage.getItem(\"DictionaryCatalog\");\n\n    if (stickyAlphabetSet !== null) {\n      const localAlphabetSet = JSON.parse(stickyAlphabetSet);\n      const localAlphabetSetList = Object.values(localAlphabetSet)[0];\n      return new Set(localAlphabetSetList);\n    }\n\n    return new Set();\n  });\n  const [currInput, setCurrInput] = useState(\"\");\n  const [vocabSource, setVocabSource] = useState(() => {\n    const stickyAlphabetSet = window.localStorage.getItem(\"DictionaryCatalog\");\n\n    if (stickyAlphabetSet !== null) {\n      const localAlphabetSet = JSON.parse(stickyAlphabetSet);\n      const localAlphabetSetKey = Object.keys(localAlphabetSet)[0];\n      return localAlphabetSetKey;\n    }\n\n    return \"GRE\";\n  }); // local persist vocab mode order\n  // const [order, setOrder] = useLocalPersistState(\"alphabet\", \"VocabOrder\");\n\n  const [index, setIndex] = useLocalPersistState(0, \"currIndex\");\n  const [currChapter, setCurrChapter] = useLocalPersistState(\"a\", \"currChapter\");\n  const [wordsDict, setWordsDict] = useState(() => {\n    return wordsCardVocabGenerator(vocabSource, currChapter);\n  });\n  const hiddenInputRef = useRef();\n  useEffect(() => {\n    hiddenInputRef.current && hiddenInputRef.current.focus();\n  });\n\n  const handleInputBlur = event => {\n    if (!openRestart) {\n      hiddenInputRef.current && hiddenInputRef.current.focus();\n    }\n  };\n\n  const handleInputChange = e => {\n    setCurrInput(e.target.value);\n    hiddenInputRef.current.value = e.target.value;\n    e.preventDefault();\n  };\n\n  const updateAlphabetSet = char => {\n    const newAlphabetSet = new Set(alphabetSet);\n\n    if (newAlphabetSet.has(char)) {\n      newAlphabetSet.delete(char);\n    } else {\n      newAlphabetSet.add(char);\n    }\n\n    const catalogLocalStore = {\n      [vocabSource]: [...newAlphabetSet]\n    };\n    window.localStorage.setItem(\"DictionaryCatalog\", JSON.stringify(catalogLocalStore));\n\n    if (newAlphabetSet.size > 0 && !newAlphabetSet.has(currChapter)) {\n      setCurrChapter([...newAlphabetSet].sort()[0]);\n      setIndex(0);\n    }\n\n    setAlphabetSet(newAlphabetSet);\n  };\n\n  const updateVocabSource = source => {\n    const catalogLocalStore = {\n      [source]: [...alphabetSet]\n    };\n    window.localStorage.setItem(\"DictionaryCatalog\", JSON.stringify(catalogLocalStore));\n    setVocabSource(source);\n    setIndex(0);\n    setCurrInput(\"\");\n    hiddenInputRef.current.value = \"\";\n  };\n\n  const toggleCatalog = () => {\n    setShowCatalog(!showCatalog);\n  };\n\n  const getCatalogDisplay = () => {\n    return showCatalog && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Catalog\",\n      children: Object.keys(DICTIONARY_SOURCE_CATALOG[vocabSource]).map(char => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: alphabetSet.has(char) ? \"Catalog-li-Activated\" : \"Catalog-li\",\n        onClick: () => updateAlphabetSet(char),\n        children: char.toUpperCase()\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this);\n  };\n\n  const getSelectedVocabSourceDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Catalog-Selected\",\n      children: Object.keys(DICTIONARY_SOURCE_CATALOG).map(optionSource => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: vocabSource === optionSource ? \"Catalog-li-Activated\" : \"Catalog-li\",\n        onClick: () => updateVocabSource(optionSource),\n        children: optionSource\n      }, optionSource, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getChapterTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: SELECT_ONE_OR_MORE_CHAPTERS,\n        children: /*#__PURE__*/_jsxDEV(UnfoldMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getCharDisplay = (idx, char) => {\n    if (idx < currInput.length) {\n      if (currInput[idx] === char) {\n        return char;\n      }\n\n      if (hideWord) {\n        return currInput[idx];\n      }\n    }\n\n    if (hideWord) {\n      return \"_\";\n    }\n\n    return char;\n  };\n\n  const getCharClassName = (idx, char) => {\n    if (idx < currInput.length) {\n      if (currInput[idx] === char) {\n        return \"correct-wordcard-char\";\n      }\n\n      if (char === \" \") {\n        return \"error-wordcard-space-char\";\n      }\n\n      return \"wordcard-error-char\";\n    }\n\n    return \"wordcard-char\";\n  };\n\n  const currWord = wordsDict[index].key;\n  const currMeaning = wordsDict[index].val;\n  const extra = currInput.slice(currWord.length, currInput.length).split(\"\");\n  const currChapterStartIndex = DICTIONARY_SOURCE_CATALOG[vocabSource][currChapter][0];\n  const currChapterEndIndex = DICTIONARY_SOURCE_CATALOG[vocabSource][currChapter][1];\n  const currChapterCount = currChapterEndIndex - currChapterStartIndex + 1;\n\n  const start = () => {\n    if (status === \"finished\") {\n      return; // reset(sentencesCountConstant, language);\n    }\n\n    if (status !== \"started\") {\n      setStatus(\"started\");\n    }\n  };\n\n  useEffect(() => {\n    const newChapterWords = wordsCardVocabGenerator(vocabSource, currChapter);\n    setWordsDict(newChapterWords);\n    setCurrInput(\"\");\n    hiddenInputRef.current.value = \"\";\n  }, [currChapter, vocabSource]);\n  useEffect(() => {\n    if (alphabetSet.size === 0) {\n      setCurrChapter(\"a\");\n      setIndex(0);\n    }\n  }, [alphabetSet.size, setCurrChapter, setIndex]);\n  useEffect(() => {\n    setCurrInput(\"\");\n    hiddenInputRef.current.value = \"\";\n  }, [index]);\n\n  const changeChapter = chapter => {\n    setCurrChapter(chapter);\n    setIndex(0);\n  };\n\n  const handleKeyDown = e => {\n    const keyCode = e.keyCode; // disable tab key\n\n    if (keyCode === 9) {\n      e.preventDefault();\n      handleTabKeyOpen();\n      return;\n    }\n\n    if (status === \"finished\") {\n      e.preventDefault();\n      return;\n    } // start the game by typing any thing\n\n\n    if (status !== \"started\" && status !== \"finished\") {\n      start();\n      return;\n    } // if enter key pressed.\n    // advance to next sentence only if the input val length is equal to the current sentence char count);\n\n\n    if (currInput.length >= currWord.length) {\n      if (keyCode === 13 || keyCode === 32) {\n        if (currWord === currInput) {\n          if (keyCode === 32) {\n            e.preventDefault();\n          }\n\n          const nextIndex = index + 1; // to next chapter or back to default\n\n          if (nextIndex === currChapterCount) {\n            // setCurrChapter(\"b\");\n            if (alphabetSet.size > 1) {\n              const currentAlphabetSetList = [...alphabetSet].sort();\n              const currPosition = currentAlphabetSetList.indexOf(currChapter);\n\n              if (currPosition === currentAlphabetSetList.length - 1) {\n                setCurrChapter(currentAlphabetSetList[0]);\n              } else {\n                setCurrChapter(currentAlphabetSetList[currPosition + 1]);\n              }\n            }\n\n            setCurrInput(\"\");\n            hiddenInputRef.current.value = \"\";\n            setIndex(0);\n            return;\n          }\n\n          setIndex(nextIndex);\n          setCurrInput(\"\");\n          hiddenInputRef.current.value = \"\";\n        } // if (currSentenceIndex + 1 === sentencesCountConstant) {\n        //   // setStatus(\"finished\");\n        //   // setTimeRunning(false);\n        //   return;\n        // }\n        // setCurrSentenceIndex(currSentenceIndex + 1);\n        // setCurrInput(\"\");\n\n\n        return;\n      }\n\n      return;\n    }\n  };\n\n  const getChapterClassName = (chapter, currChapter) => {\n    if (chapter === currChapter) {\n      return \"active-button\";\n    }\n\n    return \"inactive-button\";\n  };\n\n  const getExtraCharClassName = char => {\n    if (char === \" \") {\n      return \"wordcard-error-char-space-char\";\n    }\n\n    return \"wordcard-error-char\";\n  };\n\n  const getEyeIconDisplay = () => {\n    if (!hideWord) {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: RECITE_MODE_TITLE,\n        children: /*#__PURE__*/_jsxDEV(RemoveRedEyeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"words-card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"words-card-catalog\",\n      children: [getSelectedVocabSourceDisplay(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !showCatalog ? \"Catalog-Button\" : \"Catalog-Button-Activated\",\n        onClick: toggleCatalog,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Catalog-title\",\n          children: [\" \", getChapterTitle()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), getCatalogDisplay()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"words-card-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"hidden-input\",\n        ref: hiddenInputRef,\n        onBlur: handleInputBlur,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wordcard-meaning-display-field\",\n        children: currMeaning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wordcard-word-display-field\",\n        children: [currWord.split(\"\").map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getCharClassName(idx, char),\n          children: getCharDisplay(idx, char)\n        }, \"word\" + idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)), extra.map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getExtraCharClassName(char),\n          children: char\n        }, \"wordextra\" + idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wordscard-UI\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wordscard-UI-info\",\n          children: [\"Chapter  \" + currChapter.toUpperCase() + \": \", \" \", index + 1, \" /\", \" \", currChapterCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restart-button\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"restart\",\n                color: \"secondary\",\n                size: \"medium\",\n                onClick: () => {\n                  setIndex(index - 1 >= 0 ? index - 1 : currChapterCount - 1);\n                },\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"restart\",\n                color: \"secondary\",\n                size: \"medium\",\n                onClick: () => {\n                  setIndex(0);\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: RESTART_BUTTON_TOOLTIP_TITLE_WORDSCARD,\n                  children: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"restart\",\n                color: \"secondary\",\n                size: \"medium\",\n                onClick: () => {\n                  setIndex(index + 1 >= currChapterCount ? 0 : index + 1);\n                },\n                children: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"row\",\n              children: [...alphabetSet].sort().map(chapter => /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => {\n                  changeChapter(chapter);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: getChapterClassName(chapter, currChapter),\n                  children: chapter.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this)\n              }, chapter, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"row\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => {\n                  setHideWord(!hideWord);\n                },\n                children: getEyeIconDisplay()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, \"restart-button\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      PaperProps: {\n        style: {\n          backgroundColor: \"transparent\",\n          boxShadow: \"none\"\n        }\n      },\n      open: openRestart,\n      onKeyDown: EnterkeyPressReset,\n      children: /*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-note\",\n            children: \" press \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-type\",\n            children: \"Tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-note\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-type\",\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-note\",\n            children: \"to restart the chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"key-note\",\n          children: \" press \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"key-type\",\n          children: \"any key \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"key-note\",\n          children: \"to exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordsCard, \"AIkkoT9JYk4kI9QnbbY3E70vJJ4=\", false, function () {\n  return [useLocalPersistState, useLocalPersistState];\n});\n\n_c = WordsCard;\nexport default WordsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordsCard\");","map":{"version":3,"sources":["C:/Users/GIGA/Desktop/eletype-frontend-main/src/components/features/WordsCard/WordsCard.js"],"names":["React","useState","useEffect","useRef","DICTIONARY_SOURCE_CATALOG","RECITE_MODE_TITLE","RESTART_BUTTON_TOOLTIP_TITLE_WORDSCARD","SELECT_ONE_OR_MORE_CHAPTERS","useLocalPersistState","wordsCardVocabGenerator","Grid","Box","Tooltip","IconButton","Dialog","DialogTitle","RestartAltIcon","ArrowBackIosNewIcon","ArrowForwardIosIcon","RemoveRedEyeIcon","VisibilityOffIcon","UnfoldMoreIcon","WordsCard","status","setStatus","showCatalog","setShowCatalog","hideWord","setHideWord","openRestart","setOpenRestart","EnterkeyPressReset","e","keyCode","preventDefault","setIndex","setCurrInput","hiddenInputRef","current","value","handleTabKeyOpen","alphabetSet","setAlphabetSet","stickyAlphabetSet","window","localStorage","getItem","localAlphabetSet","JSON","parse","localAlphabetSetList","Object","values","Set","currInput","vocabSource","setVocabSource","localAlphabetSetKey","keys","index","currChapter","setCurrChapter","wordsDict","setWordsDict","focus","handleInputBlur","event","handleInputChange","target","updateAlphabetSet","char","newAlphabetSet","has","delete","add","catalogLocalStore","setItem","stringify","size","sort","updateVocabSource","source","toggleCatalog","getCatalogDisplay","map","toUpperCase","getSelectedVocabSourceDisplay","optionSource","getChapterTitle","getCharDisplay","idx","length","getCharClassName","currWord","key","currMeaning","val","extra","slice","split","currChapterStartIndex","currChapterEndIndex","currChapterCount","start","newChapterWords","changeChapter","chapter","handleKeyDown","nextIndex","currentAlphabetSetList","currPosition","indexOf","getChapterClassName","getExtraCharClassName","getEyeIconDisplay","style","backgroundColor","boxShadow"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { DICTIONARY_SOURCE_CATALOG } from \"../../../constants/DictionaryConstants\";\nimport {\n  RECITE_MODE_TITLE,\n  RESTART_BUTTON_TOOLTIP_TITLE_WORDSCARD,\n  SELECT_ONE_OR_MORE_CHAPTERS,\n} from \"../../../constants/Constants\";\nimport useLocalPersistState from \"../../../hooks/useLocalPersistState\";\nimport { wordsCardVocabGenerator } from \"../../../scripts/wordsGenerator\";\nimport { Grid, Box, Tooltip } from \"@mui/material\";\nimport IconButton from \"../../utils/IconButton\";\nimport { Dialog } from \"@mui/material\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport UnfoldMoreIcon from \"@mui/icons-material/UnfoldMore\";\n\nconst WordsCard = () => {\n  // set up game loop status state\n  const [status, setStatus] = useState(\"waiting\");\n\n  const [showCatalog, setShowCatalog] = useState(false);\n\n  const [hideWord, setHideWord] = useState(false);\n\n  // tab-enter restart dialog\n  const [openRestart, setOpenRestart] = useState(false);\n\n  const EnterkeyPressReset = (e) => {\n    // press enter/or tab to reset;\n    if (e.keyCode === 13 || e.keyCode === 9) {\n      e.preventDefault();\n      setOpenRestart(false);\n      setIndex(0);\n      setCurrInput(\"\");\n      hiddenInputRef.current.value = \"\";\n    } else {\n      e.preventDefault();\n      setOpenRestart(false);\n    }\n  };\n\n  const handleTabKeyOpen = () => {\n    setOpenRestart(true);\n  };\n\n  // localStorage persist theme setting\n  const [alphabetSet, setAlphabetSet] = useState(() => {\n    const stickyAlphabetSet = window.localStorage.getItem(\"DictionaryCatalog\");\n    if (stickyAlphabetSet !== null) {\n      const localAlphabetSet = JSON.parse(stickyAlphabetSet);\n      const localAlphabetSetList = Object.values(localAlphabetSet)[0];\n      return new Set(localAlphabetSetList);\n    }\n    return new Set();\n  });\n\n  const [currInput, setCurrInput] = useState(\"\");\n\n  const [vocabSource, setVocabSource] = useState(() => {\n    const stickyAlphabetSet = window.localStorage.getItem(\"DictionaryCatalog\");\n    if (stickyAlphabetSet !== null) {\n      const localAlphabetSet = JSON.parse(stickyAlphabetSet);\n      const localAlphabetSetKey = Object.keys(localAlphabetSet)[0];\n      return localAlphabetSetKey;\n    }\n    return \"GRE\";\n  });\n\n  // local persist vocab mode order\n  // const [order, setOrder] = useLocalPersistState(\"alphabet\", \"VocabOrder\");\n\n  const [index, setIndex] = useLocalPersistState(0, \"currIndex\");\n\n  const [currChapter, setCurrChapter] = useLocalPersistState(\n    \"a\",\n    \"currChapter\"\n  );\n\n  const [wordsDict, setWordsDict] = useState(() => {\n    return wordsCardVocabGenerator(vocabSource, currChapter);\n  });\n\n  const hiddenInputRef = useRef();\n  useEffect(() => {\n    hiddenInputRef.current && hiddenInputRef.current.focus();\n  });\n  const handleInputBlur = (event) => {\n    if (!openRestart) {\n      hiddenInputRef.current && hiddenInputRef.current.focus();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setCurrInput(e.target.value);\n    hiddenInputRef.current.value = e.target.value;\n    e.preventDefault();\n  };\n\n  const updateAlphabetSet = (char) => {\n    const newAlphabetSet = new Set(alphabetSet);\n    if (newAlphabetSet.has(char)) {\n      newAlphabetSet.delete(char);\n    } else {\n      newAlphabetSet.add(char);\n    }\n    const catalogLocalStore = {\n      [vocabSource]: [...newAlphabetSet],\n    };\n    window.localStorage.setItem(\n      \"DictionaryCatalog\",\n      JSON.stringify(catalogLocalStore)\n    );\n    if (newAlphabetSet.size > 0 && !newAlphabetSet.has(currChapter)) {\n      setCurrChapter([...newAlphabetSet].sort()[0]);\n      setIndex(0);\n    }\n    setAlphabetSet(newAlphabetSet);\n  };\n\n  const updateVocabSource = (source) => {\n    const catalogLocalStore = {\n      [source]: [...alphabetSet],\n    };\n    window.localStorage.setItem(\n      \"DictionaryCatalog\",\n      JSON.stringify(catalogLocalStore)\n    );\n    setVocabSource(source);\n    setIndex(0);\n    setCurrInput(\"\");\n    hiddenInputRef.current.value = \"\";\n  };\n\n  const toggleCatalog = () => {\n    setShowCatalog(!showCatalog);\n  };\n\n  const getCatalogDisplay = () => {\n    return (\n      showCatalog && (\n        <div className=\"Catalog\">\n          {Object.keys(DICTIONARY_SOURCE_CATALOG[vocabSource]).map((char) => (\n            <div\n              key={char}\n              className={\n                alphabetSet.has(char) ? \"Catalog-li-Activated\" : \"Catalog-li\"\n              }\n              onClick={() => updateAlphabetSet(char)}\n            >\n              {char.toUpperCase()}\n            </div>\n          ))}\n        </div>\n      )\n    );\n  };\n\n  const getSelectedVocabSourceDisplay = () => {\n    return (\n      <div className=\"Catalog-Selected\">\n        {Object.keys(DICTIONARY_SOURCE_CATALOG).map((optionSource) => (\n          <div\n            key={optionSource}\n            className={\n              vocabSource === optionSource\n                ? \"Catalog-li-Activated\"\n                : \"Catalog-li\"\n            }\n            onClick={() => updateVocabSource(optionSource)}\n          >\n            {optionSource}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const getChapterTitle = () => {\n    return (\n      <div>\n        <Tooltip title={SELECT_ONE_OR_MORE_CHAPTERS}>\n          <UnfoldMoreIcon></UnfoldMoreIcon>\n        </Tooltip>\n      </div>\n    );\n  };\n\n  const getCharDisplay = (idx, char) => {\n    if (idx < currInput.length) {\n      if (currInput[idx] === char) {\n        return char;\n      }\n      if (hideWord) {\n        return currInput[idx];\n      }\n    }\n    if (hideWord) {\n      return \"_\";\n    }\n    return char;\n  };\n\n  const getCharClassName = (idx, char) => {\n    if (idx < currInput.length) {\n      if (currInput[idx] === char) {\n        return \"correct-wordcard-char\";\n      }\n      if (char === \" \") {\n        return \"error-wordcard-space-char\";\n      }\n      return \"wordcard-error-char\";\n    }\n    return \"wordcard-char\";\n  };\n\n  const currWord = wordsDict[index].key;\n  const currMeaning = wordsDict[index].val;\n  const extra = currInput.slice(currWord.length, currInput.length).split(\"\");\n  const currChapterStartIndex =\n    DICTIONARY_SOURCE_CATALOG[vocabSource][currChapter][0];\n  const currChapterEndIndex =\n    DICTIONARY_SOURCE_CATALOG[vocabSource][currChapter][1];\n  const currChapterCount = currChapterEndIndex - currChapterStartIndex + 1;\n\n  const start = () => {\n    if (status === \"finished\") {\n      return;\n      // reset(sentencesCountConstant, language);\n    }\n    if (status !== \"started\") {\n      setStatus(\"started\");\n    }\n  };\n\n  useEffect(() => {\n    const newChapterWords = wordsCardVocabGenerator(vocabSource, currChapter);\n    setWordsDict(newChapterWords);\n    setCurrInput(\"\");\n    hiddenInputRef.current.value = \"\";\n  }, [currChapter, vocabSource]);\n\n  useEffect(() => {\n    if (alphabetSet.size === 0) {\n      setCurrChapter(\"a\");\n      setIndex(0);\n    }\n  }, [alphabetSet.size, setCurrChapter, setIndex]);\n\n  useEffect(() => {\n    setCurrInput(\"\");\n    hiddenInputRef.current.value = \"\";\n  }, [index]);\n\n  const changeChapter = (chapter) => {\n    setCurrChapter(chapter);\n    setIndex(0);\n  };\n\n  const handleKeyDown = (e) => {\n    const keyCode = e.keyCode;\n    // disable tab key\n    if (keyCode === 9) {\n      e.preventDefault();\n      handleTabKeyOpen();\n      return;\n    }\n    if (status === \"finished\") {\n      e.preventDefault();\n      return;\n    }\n\n    // start the game by typing any thing\n    if (status !== \"started\" && status !== \"finished\") {\n      start();\n      return;\n    }\n\n    // if enter key pressed.\n    // advance to next sentence only if the input val length is equal to the current sentence char count);\n    if (currInput.length >= currWord.length) {\n      if (keyCode === 13 || keyCode === 32) {\n        if (currWord === currInput) {\n          if (keyCode === 32) {\n            e.preventDefault()\n          }\n          const nextIndex = index + 1;\n          // to next chapter or back to default\n          if (nextIndex === currChapterCount) {\n            // setCurrChapter(\"b\");\n            if (alphabetSet.size > 1) {\n              const currentAlphabetSetList = [...alphabetSet].sort();\n              const currPosition = currentAlphabetSetList.indexOf(currChapter);\n              if (currPosition === currentAlphabetSetList.length - 1) {\n                setCurrChapter(currentAlphabetSetList[0]);\n              } else {\n                setCurrChapter(currentAlphabetSetList[currPosition + 1]);\n              }\n            }\n            setCurrInput(\"\");\n            hiddenInputRef.current.value = \"\";\n            setIndex(0);\n            return;\n          }\n\n          setIndex(nextIndex);\n          setCurrInput(\"\");\n          hiddenInputRef.current.value = \"\";\n        }\n        // if (currSentenceIndex + 1 === sentencesCountConstant) {\n        //   // setStatus(\"finished\");\n        //   // setTimeRunning(false);\n        //   return;\n        // }\n        // setCurrSentenceIndex(currSentenceIndex + 1);\n        // setCurrInput(\"\");\n        return;\n      }\n      return;\n    }\n  };\n\n  const getChapterClassName = (chapter, currChapter) => {\n    if (chapter === currChapter) {\n      return \"active-button\";\n    }\n    return \"inactive-button\";\n  };\n\n  const getExtraCharClassName = (char) => {\n    if (char === \" \") {\n      return \"wordcard-error-char-space-char\";\n    }\n    return \"wordcard-error-char\";\n  };\n\n  const getEyeIconDisplay = () => {\n    if (!hideWord) {\n      return (\n        <Tooltip title={RECITE_MODE_TITLE}>\n          <RemoveRedEyeIcon></RemoveRedEyeIcon>\n        </Tooltip>\n      );\n    }\n    return <VisibilityOffIcon></VisibilityOffIcon>;\n  };\n\n  return (\n    <div className=\"words-card-container\">\n      <div className=\"words-card-catalog\">\n        {getSelectedVocabSourceDisplay()}\n        <div\n          className={\n            !showCatalog ? \"Catalog-Button\" : \"Catalog-Button-Activated\"\n          }\n          onClick={toggleCatalog}\n        >\n          <div className=\"Catalog-title\"> {getChapterTitle()}</div>\n        </div>\n        {getCatalogDisplay()}\n      </div>\n      <div className=\"words-card-main\">\n        <input\n          className=\"hidden-input\"\n          ref={hiddenInputRef}\n          onBlur={handleInputBlur}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        ></input>\n        <div className=\"wordcard-meaning-display-field\">{currMeaning}</div>\n        <div className=\"wordcard-word-display-field\">\n          {currWord.split(\"\").map((char, idx) => (\n            <span key={\"word\" + idx} className={getCharClassName(idx, char)}>\n              {getCharDisplay(idx, char)}\n            </span>\n          ))}\n          {extra.map((char, idx) => (\n            <span\n              key={\"wordextra\" + idx}\n              className={getExtraCharClassName(char)}\n            >\n              {char}\n            </span>\n          ))}\n        </div>\n        <div className=\"wordscard-UI\">\n          <div className=\"wordscard-UI-info\">\n            {\"Chapter  \" + currChapter.toUpperCase() + \": \"} {index + 1} /{\" \"}\n            {currChapterCount}\n          </div>\n\n          <div className=\"restart-button\" key=\"restart-button\">\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\n              <Box display=\"flex\" flexDirection=\"row\">\n                <IconButton\n                  aria-label=\"restart\"\n                  color=\"secondary\"\n                  size=\"medium\"\n                  onClick={() => {\n                    setIndex(index - 1 >= 0 ? index - 1 : currChapterCount - 1);\n                  }}\n                >\n                  <ArrowBackIosNewIcon />\n                </IconButton>\n                <IconButton\n                  aria-label=\"restart\"\n                  color=\"secondary\"\n                  size=\"medium\"\n                  onClick={() => {\n                    setIndex(0);\n                  }}\n                >\n                  <Tooltip title={RESTART_BUTTON_TOOLTIP_TITLE_WORDSCARD}>\n                    <RestartAltIcon />\n                  </Tooltip>\n                </IconButton>\n                <IconButton\n                  aria-label=\"restart\"\n                  color=\"secondary\"\n                  size=\"medium\"\n                  onClick={() => {\n                    setIndex(index + 1 >= currChapterCount ? 0 : index + 1);\n                  }}\n                >\n                  <ArrowForwardIosIcon />\n                </IconButton>\n              </Box>\n              <Box display=\"flex\" flexDirection=\"row\">\n                {[...alphabetSet].sort().map((chapter) => (\n                  <IconButton\n                    key={chapter}\n                    onClick={() => {\n                      changeChapter(chapter);\n                    }}\n                  >\n                    <span className={getChapterClassName(chapter, currChapter)}>\n                      {chapter.toUpperCase()}\n                    </span>\n                  </IconButton>\n                ))}\n              </Box>\n              <Box display=\"flex\" flexDirection=\"row\">\n                <IconButton\n                  onClick={() => {\n                    setHideWord(!hideWord);\n                  }}\n                >\n                  {getEyeIconDisplay()}\n                </IconButton>\n              </Box>\n            </Grid>\n          </div>\n        </div>\n      </div>\n      <Dialog\n        PaperProps={{\n          style: {\n            backgroundColor: \"transparent\",\n            boxShadow: \"none\",\n          },\n        }}\n        open={openRestart}\n        onKeyDown={EnterkeyPressReset}\n      >\n        <DialogTitle>\n          <div>\n            <span className=\"key-note\"> press </span>\n            <span className=\"key-type\">Tab</span>{\" \"}\n            <span className=\"key-note\">/</span>{\" \"}\n            <span className=\"key-type\">Enter</span>{\" \"}\n            <span className=\"key-note\">to restart the chapter</span>\n          </div>\n          <span className=\"key-note\"> press </span>\n          <span className=\"key-type\">any key </span>{\" \"}\n          <span className=\"key-note\">to exit</span>\n        </DialogTitle>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default WordsCard;\n"]},"metadata":{},"sourceType":"module"}