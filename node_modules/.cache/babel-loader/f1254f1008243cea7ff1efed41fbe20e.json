{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGA\\\\Desktop\\\\eletype-frontend-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { defaultTheme, themesOptions } from \"./style/theme\";\nimport { GlobalStyles } from \"./style/global\";\nimport TypeBox from \"./components/features/TypeBox/TypeBox\";\nimport SentenceBox from \"./components/features/SentenceBox/SentenceBox\";\nimport Logo from \"./components/common/Logo\";\nimport MusicPlayerSnackbar from \"./components/features/MusicPlayer/MusicPlayerSnackbar\";\nimport FooterMenu from \"./components/common/FooterMenu\";\nimport FreeTypingBox from \"./components/features/FreeTypingBox\";\nimport { GAME_MODE, GAME_MODE_DEFAULT, GAME_MODE_SENTENCE } from \"./constants/Constants\";\nimport useLocalPersistState from \"./hooks/useLocalPersistState\";\nimport DefaultKeyboard from \"./components/features/Keyboard/DefaultKeyboard\";\nimport WordsCard from \"./components/features/WordsCard/WordsCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // localStorage persist theme setting\n  const [theme, setTheme] = useState(() => {\n    const stickyTheme = window.localStorage.getItem(\"theme\");\n\n    if (stickyTheme !== null) {\n      const localTheme = JSON.parse(stickyTheme);\n      const upstreamTheme = themesOptions.find(e => e.label === localTheme.label).value; // we will do a deep equal here. In case we want to support customized local theme.\n\n      const isDeepEqual = localTheme === upstreamTheme;\n      return isDeepEqual ? localTheme : upstreamTheme;\n    }\n\n    return defaultTheme;\n  }); // local persist game mode setting\n\n  const [gameMode, setGameMode] = useLocalPersistState(GAME_MODE_DEFAULT, GAME_MODE);\n\n  const handleGameModeChange = currGameMode => {\n    setGameMode(currGameMode);\n  }; // localStorage persist focusedMode setting\n\n\n  const [isFocusedMode, setIsFocusedMode] = useState(localStorage.getItem(\"focused-mode\") === \"true\"); // musicMode setting\n\n  const [isMusicMode, setIsMusicMode] = useState(false); // coffeeMode setting\n\n  const [isCoffeeMode, setIsCoffeeMode] = useState(false); // trainer mode setting\n\n  const [isTrainerMode, setIsTrainerMode] = useState(false); // words card mode\n\n  const [isWordsCardMode, setIsWordsCardMode] = useLocalPersistState(false, \"IsInWordsCardMode\");\n  const isWordGameMode = gameMode === GAME_MODE_DEFAULT && !isCoffeeMode && !isTrainerMode && !isWordsCardMode;\n  const isSentenceGameMode = gameMode === GAME_MODE_SENTENCE && !isCoffeeMode && !isTrainerMode && !isWordsCardMode;\n\n  const handleThemeChange = e => {\n    window.localStorage.setItem(\"theme\", JSON.stringify(e.value));\n    setTheme(e.value);\n  };\n\n  const toggleFocusedMode = () => {\n    setIsFocusedMode(!isFocusedMode);\n  };\n\n  const toggleMusicMode = () => {\n    setIsMusicMode(!isMusicMode);\n  };\n\n  const toggleCoffeeMode = () => {\n    setIsCoffeeMode(!isCoffeeMode);\n    setIsTrainerMode(false);\n    setIsWordsCardMode(false);\n  };\n\n  const toggleTrainerMode = () => {\n    setIsTrainerMode(!isTrainerMode);\n    setIsCoffeeMode(false);\n    setIsWordsCardMode(false);\n  };\n\n  const toggleWordsCardMode = () => {\n    setIsTrainerMode(false);\n    setIsCoffeeMode(false);\n    setIsWordsCardMode(!isWordsCardMode);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"focused-mode\", isFocusedMode);\n  }, [isFocusedMode]);\n  const textInputRef = useRef(null);\n\n  const focusTextInput = () => {\n    textInputRef.current && textInputRef.current.focus();\n  };\n\n  const textAreaRef = useRef(null);\n\n  const focusTextArea = () => {\n    textAreaRef.current && textAreaRef.current.focus();\n  };\n\n  const sentenceInputRef = useRef(null);\n\n  const focusSentenceInput = () => {\n    sentenceInputRef.current && sentenceInputRef.current.focus();\n  };\n\n  useEffect(() => {\n    if (isWordGameMode) {\n      focusTextInput();\n      return;\n    }\n\n    if (isSentenceGameMode) {\n      focusSentenceInput();\n      return;\n    }\n\n    if (isCoffeeMode) {\n      focusTextArea();\n      return;\n    }\n\n    return;\n  }, [theme, isFocusedMode, isMusicMode, isCoffeeMode, isWordGameMode, isSentenceGameMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas\",\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          isFocusedMode: isFocusedMode,\n          isMusicMode: isMusicMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), isWordGameMode && /*#__PURE__*/_jsxDEV(TypeBox, {\n          textInputRef: textInputRef,\n          isFocusedMode: isFocusedMode,\n          handleInputFocus: () => focusTextInput()\n        }, \"type-box\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), isSentenceGameMode && /*#__PURE__*/_jsxDEV(SentenceBox, {\n          sentenceInputRef: sentenceInputRef,\n          isFocusedMode: isFocusedMode,\n          handleInputFocus: () => focusSentenceInput()\n        }, \"sentence-box\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), isCoffeeMode && !isTrainerMode && !isWordsCardMode && /*#__PURE__*/_jsxDEV(FreeTypingBox, {\n          textAreaRef: textAreaRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 68\n        }, this), isTrainerMode && !isCoffeeMode && !isWordsCardMode && /*#__PURE__*/_jsxDEV(DefaultKeyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 68\n        }, this), isWordsCardMode && !isCoffeeMode && !isTrainerMode && /*#__PURE__*/_jsxDEV(WordsCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(FooterMenu, {\n          themesOptions: themesOptions,\n          theme: theme,\n          handleThemeChange: handleThemeChange,\n          toggleFocusedMode: toggleFocusedMode,\n          toggleMusicMode: toggleMusicMode,\n          toggleCoffeeMode: toggleCoffeeMode,\n          isCoffeeMode: isCoffeeMode,\n          isMusicMode: isMusicMode,\n          isFocusedMode: isFocusedMode,\n          gameMode: gameMode,\n          handleGameModeChange: handleGameModeChange,\n          isTrainerMode: isTrainerMode,\n          toggleTrainerMode: toggleTrainerMode,\n          isWordsCardMode: isWordsCardMode,\n          toggleWordsCardMode: toggleWordsCardMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MusicPlayerSnackbar, {\n          isMusicMode: isMusicMode,\n          isFocusedMode: isFocusedMode,\n          onMouseLeave: () => focusTextInput()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"W1wBUCyNiGkfMsctPQjzucBwiAU=\", false, function () {\n  return [useLocalPersistState, useLocalPersistState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/GIGA/Desktop/eletype-frontend-main/src/App.js"],"names":["React","useState","useRef","useEffect","ThemeProvider","defaultTheme","themesOptions","GlobalStyles","TypeBox","SentenceBox","Logo","MusicPlayerSnackbar","FooterMenu","FreeTypingBox","GAME_MODE","GAME_MODE_DEFAULT","GAME_MODE_SENTENCE","useLocalPersistState","DefaultKeyboard","WordsCard","App","theme","setTheme","stickyTheme","window","localStorage","getItem","localTheme","JSON","parse","upstreamTheme","find","e","label","value","isDeepEqual","gameMode","setGameMode","handleGameModeChange","currGameMode","isFocusedMode","setIsFocusedMode","isMusicMode","setIsMusicMode","isCoffeeMode","setIsCoffeeMode","isTrainerMode","setIsTrainerMode","isWordsCardMode","setIsWordsCardMode","isWordGameMode","isSentenceGameMode","handleThemeChange","setItem","stringify","toggleFocusedMode","toggleMusicMode","toggleCoffeeMode","toggleTrainerMode","toggleWordsCardMode","textInputRef","focusTextInput","current","focus","textAreaRef","focusTextArea","sentenceInputRef","focusSentenceInput"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { defaultTheme, themesOptions } from \"./style/theme\";\nimport { GlobalStyles } from \"./style/global\";\nimport TypeBox from \"./components/features/TypeBox/TypeBox\";\nimport SentenceBox from \"./components/features/SentenceBox/SentenceBox\";\nimport Logo from \"./components/common/Logo\";\nimport MusicPlayerSnackbar from \"./components/features/MusicPlayer/MusicPlayerSnackbar\";\nimport FooterMenu from \"./components/common/FooterMenu\";\nimport FreeTypingBox from \"./components/features/FreeTypingBox\";\nimport {\n  GAME_MODE,\n  GAME_MODE_DEFAULT,\n  GAME_MODE_SENTENCE,\n} from \"./constants/Constants\";\nimport useLocalPersistState from \"./hooks/useLocalPersistState\";\nimport DefaultKeyboard from \"./components/features/Keyboard/DefaultKeyboard\";\nimport WordsCard from \"./components/features/WordsCard/WordsCard\";\n\nfunction App() {\n  // localStorage persist theme setting\n  const [theme, setTheme] = useState(() => {\n    const stickyTheme = window.localStorage.getItem(\"theme\");\n    if (stickyTheme !== null) {\n      const localTheme = JSON.parse(stickyTheme);\n      const upstreamTheme = themesOptions.find(\n        (e) => e.label === localTheme.label\n      ).value;\n      // we will do a deep equal here. In case we want to support customized local theme.\n      const isDeepEqual = localTheme === upstreamTheme;\n      return isDeepEqual ? localTheme : upstreamTheme;\n    }\n    return defaultTheme;\n  });\n\n  // local persist game mode setting\n  const [gameMode, setGameMode] = useLocalPersistState(\n    GAME_MODE_DEFAULT,\n    GAME_MODE\n  );\n\n  const handleGameModeChange = (currGameMode) => {\n    setGameMode(currGameMode);\n  };\n\n  // localStorage persist focusedMode setting\n  const [isFocusedMode, setIsFocusedMode] = useState(\n    localStorage.getItem(\"focused-mode\") === \"true\"\n  );\n\n  // musicMode setting\n  const [isMusicMode, setIsMusicMode] = useState(false);\n\n  // coffeeMode setting\n  const [isCoffeeMode, setIsCoffeeMode] = useState(false);\n\n  // trainer mode setting\n  const [isTrainerMode, setIsTrainerMode] = useState(false);\n\n  // words card mode\n  const [isWordsCardMode, setIsWordsCardMode] = useLocalPersistState(false, \"IsInWordsCardMode\");\n\n  const isWordGameMode = gameMode === GAME_MODE_DEFAULT && !isCoffeeMode && !isTrainerMode && !isWordsCardMode;\n  const isSentenceGameMode = gameMode === GAME_MODE_SENTENCE && !isCoffeeMode && !isTrainerMode && !isWordsCardMode;\n\n  const handleThemeChange = (e) => {\n    window.localStorage.setItem(\"theme\", JSON.stringify(e.value));\n    setTheme(e.value);\n  };\n\n  const toggleFocusedMode = () => {\n    setIsFocusedMode(!isFocusedMode);\n  };\n\n  const toggleMusicMode = () => {\n    setIsMusicMode(!isMusicMode);\n  };\n\n  const toggleCoffeeMode = () => {\n    setIsCoffeeMode(!isCoffeeMode);\n    setIsTrainerMode(false);\n    setIsWordsCardMode(false);\n  };\n\n  const toggleTrainerMode = () => {\n    setIsTrainerMode(!isTrainerMode);\n    setIsCoffeeMode(false);\n    setIsWordsCardMode(false);\n  };\n\n  const toggleWordsCardMode = () => {\n    setIsTrainerMode(false);\n    setIsCoffeeMode(false);\n    setIsWordsCardMode(!isWordsCardMode);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"focused-mode\", isFocusedMode);\n  }, [isFocusedMode]);\n\n  const textInputRef = useRef(null);\n  const focusTextInput = () => {\n    textInputRef.current && textInputRef.current.focus();\n  };\n\n  const textAreaRef = useRef(null);\n  const focusTextArea = () => {\n    textAreaRef.current && textAreaRef.current.focus();\n  };\n\n  const sentenceInputRef = useRef(null);\n  const focusSentenceInput = () => {\n    sentenceInputRef.current && sentenceInputRef.current.focus();\n  };\n\n  useEffect(() => {\n    if (isWordGameMode) {\n      focusTextInput();\n      return;\n    }\n    if (isSentenceGameMode) {\n      focusSentenceInput();\n      return;\n    }\n    if (isCoffeeMode) {\n      focusTextArea();\n      return;\n    }\n    return;\n  }, [\n    theme,\n    isFocusedMode,\n    isMusicMode,\n    isCoffeeMode,\n    isWordGameMode,\n    isSentenceGameMode,\n  ]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <div className=\"canvas\">\n          <GlobalStyles />\n          <Logo isFocusedMode={isFocusedMode} isMusicMode={isMusicMode}></Logo>\n          {isWordGameMode && (\n            <TypeBox\n              textInputRef={textInputRef}\n              isFocusedMode={isFocusedMode}\n              key=\"type-box\"\n              handleInputFocus={() => focusTextInput()}\n            ></TypeBox>\n          )}\n          {isSentenceGameMode && (\n            <SentenceBox\n              sentenceInputRef={sentenceInputRef}\n              isFocusedMode={isFocusedMode}\n              key=\"sentence-box\"\n              handleInputFocus={() => focusSentenceInput()}\n            ></SentenceBox>\n          )}\n          {isCoffeeMode && (!isTrainerMode && !isWordsCardMode) && <FreeTypingBox textAreaRef={textAreaRef} />}\n          {isTrainerMode && (!isCoffeeMode && !isWordsCardMode) && <DefaultKeyboard></DefaultKeyboard>}\n          {isWordsCardMode && (!isCoffeeMode && !isTrainerMode) && <WordsCard></WordsCard>}\n          <FooterMenu\n            themesOptions={themesOptions}\n            theme={theme}\n            handleThemeChange={handleThemeChange}\n            toggleFocusedMode={toggleFocusedMode}\n            toggleMusicMode={toggleMusicMode}\n            toggleCoffeeMode={toggleCoffeeMode}\n            isCoffeeMode={isCoffeeMode}\n            isMusicMode={isMusicMode}\n            isFocusedMode={isFocusedMode}\n            gameMode={gameMode}\n            handleGameModeChange={handleGameModeChange}\n            isTrainerMode={isTrainerMode}\n            toggleTrainerMode={toggleTrainerMode}\n            isWordsCardMode={isWordsCardMode}\n            toggleWordsCardMode={toggleWordsCardMode}\n          ></FooterMenu>\n          <MusicPlayerSnackbar\n            isMusicMode={isMusicMode}\n            isFocusedMode={isFocusedMode}\n            onMouseLeave={() => focusTextInput()}\n          ></MusicPlayerSnackbar>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}