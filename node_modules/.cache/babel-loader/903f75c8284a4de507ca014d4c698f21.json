{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGA\\\\Desktop\\\\eletype-frontend-main\\\\src\\\\components\\\\features\\\\TypeBox\\\\Stats.js\";\nimport React from \"react\";\nimport { Box } from \"@mui/system\";\nimport { Tooltip } from \"@mui/material\";\nimport { CHAR_TOOLTIP_TITLE } from \"../../../constants/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Stats = _ref => {\n  let {\n    status,\n    wpm,\n    countDown,\n    countDownConstant,\n    statsCharCount,\n    rawKeyStrokes\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [countDown, \" s \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"WPM: \", Math.round(wpm)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), status === \"finished\" && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Accuracy: \", Math.round(statsCharCount[0]), \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), status === \"finished\" && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            whiteSpace: \"pre-line\"\n          },\n          children: CHAR_TOOLTIP_TITLE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Char:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"correct-char-stats\",\n            children: statsCharCount[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"incorrect-char-stats\",\n            children: statsCharCount[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"missing-char-stats\",\n            children: statsCharCount[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"correct-char-stats\",\n            children: statsCharCount[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"incorrect-char-stats\",\n            children: statsCharCount[5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), status === \"finished\" && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Raw KPM: \", Math.round(rawKeyStrokes / countDownConstant * 60.0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Stats;\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["C:/Users/GIGA/Desktop/eletype-frontend-main/src/components/features/TypeBox/Stats.js"],"names":["React","Box","Tooltip","CHAR_TOOLTIP_TITLE","Stats","status","wpm","countDown","countDownConstant","statsCharCount","rawKeyStrokes","Math","round","whiteSpace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;;;AAEA,MAAMC,KAAK,GAAG,QAOR;AAAA,MAPS;AACbC,IAAAA,MADa;AAEbC,IAAAA,GAFa;AAGbC,IAAAA,SAHa;AAIbC,IAAAA,iBAJa;AAKbC,IAAAA,cALa;AAMbC,IAAAA;AANa,GAOT;AACJ,sBACE;AAAA,4BACE;AAAA,iBAAKH,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,aAAa,EAAC,KAAlC;AAAA,8BACE;AAAA,4BAAUI,IAAI,CAACC,KAAL,CAAWN,GAAX,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,MAAM,KAAK,UAAX,iBACC;AAAA,iCAAeM,IAAI,CAACC,KAAL,CAAWH,cAAc,CAAC,CAAD,CAAzB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKGJ,MAAM,KAAK,UAAX,iBACC,QAAC,OAAD;AACE,QAAA,KAAK,eACH;AAAM,UAAA,KAAK,EAAE;AAAEQ,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAA,oBACGV;AADH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,+BAOE;AAAA,8BACQ,GADR,eAEE;AAAM,YAAA,SAAS,EAAC,oBAAhB;AAAA,sBAAsCM,cAAc,CAAC,CAAD;AAApD;AAAA;AAAA;AAAA;AAAA,kBAFF,oBAGE;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA,sBAAwCA,cAAc,CAAC,CAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAHF,oBAIE;AAAM,YAAA,SAAS,EAAC,oBAAhB;AAAA,sBAAsCA,cAAc,CAAC,CAAD;AAApD;AAAA;AAAA;AAAA;AAAA,kBAJF,oBAKE;AAAM,YAAA,SAAS,EAAC,oBAAhB;AAAA,sBAAsCA,cAAc,CAAC,CAAD;AAApD;AAAA;AAAA;AAAA;AAAA,kBALF,oBAME;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA,sBAAwCA,cAAc,CAAC,CAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cANJ,EAuBGJ,MAAM,KAAK,UAAX,iBACC;AAAA,gCACYM,IAAI,CAACC,KAAL,CAAYF,aAAa,GAAGF,iBAAjB,GAAsC,IAAjD,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkCD,CA1CD;;KAAMJ,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { Box } from \"@mui/system\";\nimport { Tooltip } from \"@mui/material\";\nimport { CHAR_TOOLTIP_TITLE } from \"../../../constants/Constants\";\n\nconst Stats = ({\n  status,\n  wpm,\n  countDown,\n  countDownConstant,\n  statsCharCount,\n  rawKeyStrokes,\n}) => {\n  return (\n    <>\n      <h3>{countDown} s </h3>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <h3>WPM: {Math.round(wpm)}</h3>\n        {status === \"finished\" && (\n          <h4>Accuracy: {Math.round(statsCharCount[0])} %</h4>\n        )}\n        {status === \"finished\" && (\n          <Tooltip\n            title={\n              <span style={{ whiteSpace: \"pre-line\" }}>\n                {CHAR_TOOLTIP_TITLE}\n              </span>\n            }\n          >\n            <h4>\n              Char:{\" \"}\n              <span className=\"correct-char-stats\">{statsCharCount[1]}</span>/\n              <span className=\"incorrect-char-stats\">{statsCharCount[2]}</span>/\n              <span className=\"missing-char-stats\">{statsCharCount[3]}</span>/\n              <span className=\"correct-char-stats\">{statsCharCount[4]}</span>/\n              <span className=\"incorrect-char-stats\">{statsCharCount[5]}</span>\n            </h4>\n          </Tooltip>\n        )}\n        {status === \"finished\" && (\n          <h4>\n            Raw KPM: {Math.round((rawKeyStrokes / countDownConstant) * 60.0)}\n          </h4>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}